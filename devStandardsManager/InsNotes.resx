<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picTab1Preview.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>